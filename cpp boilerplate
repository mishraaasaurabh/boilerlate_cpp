{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "cpp boilerplate code",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"const long long int mod = 1e9+7;",
			"#define int long long",
			"bool isPrime(int n)",
			"	{",
			"	if (n <= 1)",
			"		return false;",
			"	for (int i = 2; i*i <= n; i++)",
			"		if (n % i == 0)",
			"			return false;",
			"	return true;",
			"	}"
			"int Power(int x,int n){",
				"int res=1;",
				"while(n){",
					"if(n%2!=0){res=res*x;}",
					"x=x*x;",
					"n>>=1;",
				"}return res;",
			"}"
			"int clear_rightmost_bit(int n){",
			"	return n&(n-1);",
			"}"
			"int least_signif_bit(int n){",
			"	return n&(-n); //alternately n&(~(n-1))",
			"}"
			"int count_set_bits(int n){",
			"	int count=0;",
			"	while(n){",
			"	n=n&(n-1);",
			"	count++;",
			"	}",
			"return count;",
			"}"
			"int binary_str_to_int(string str){",
			"	int a = stoi(str,nullptr,2);",
			"return a;}",
			"bool ispower_of_two(int n){",
			"	return n && !(n & n-1);",
			"}"
			"int left_most_setbit(int N) {",
			"	return N ? 32 - __builtin_clz(N) : INT_MIN;",
			"}"
			"int left_most_setbit(unsigned long long N) {",
			"	return N ? 64 - __builtin_clzll(N) : INT_MIN;",
			"}"
			
			"int right_most_bit(int n){",
			"	return log2(n&-n);",
			"}",

			"vector<int> sieve(int n){",
			"	int *arr=new int [n+1]();",
			"	vector<int>v;",
			"	for(int i=2;i<=n;i++){",
			"		if(arr[i]==0){",
			"			v.push_back(i);",
			"			for(int j=i*i;j<=n;j+=i)",
			"				arr[j]=1;",
			"		}",
			"	}",
			"	return v;",
			"}",

			"int binatysearchanswer(vector<int>&v,int n,int t){",
			"	int l=-1,r=n;",
			"	while(r-l>1){",
			"		int m=(l+r)/2;",
			"		pred(v[m])?l=m:r=m;",
			"	}",
			"	return l;",
			"}",
			"int clear_jth_bit(int n, int j) //zero indexed" ,  //zero index
			"{",
			"    return (n & (~(1 << (j))));",
			"}",
			"int set_jth_bit(int n, int j) //zero indexed" ,  //zero index
			"{",
			"    return (n | ((1 << (j))));",
			"}",
			
			"signed main(){",
			"	ios_base::sync_with_stdio(false);",
			"	cin.tie(NULL);",
			"	cout.tie(NULL);",
			"	$1",
				"}",
		],
		"description": "C++ boiler plate"
	}
}
